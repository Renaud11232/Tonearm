name: Release

on:
  release:
    types:
      - published

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: pip install build
      - run: python -m build
      - id: version
        run: echo "version=$(find dist/ -name '*.tar.gz' | xargs basename --suffix '.tar.gz' | cut -d '-' -f 2)" | tee -a $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
  release:
    name: Upload dist files to release
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - uses: svenstaro/upload-release-action@v2
        with:
          file: "dist/*"
          file_glob: true
  docker:
    name: Build docker container images
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: |
            ghcr.io/Renaud11232/tonearm
          tags: |
            type=pep440,pattern={{version}},value=${{ needs.build.outputs.version }}
            type=pep440,pattern={{major}}.{{minor}},value=${{ needs.build.outputs.version }}
            type=pep440,pattern={{major}},value=${{ needs.build.outputs.version }}
          labels: |
            org.opencontainers.image.title=tonearm
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64